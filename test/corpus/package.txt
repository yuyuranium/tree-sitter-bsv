========================================================================
package definitions
========================================================================

package Chou;

endpackage : Chou

------------------------------------------------------------------------

(program
  (package
    (packageIde
      (Identifier))
    (packageIde
      (Identifier))))

========================================================================
import/export
========================================================================

package Zhou;

  import   ZZ ::       *;
  export zhou   (..) ;
  export      chou,   Chou;
endpackage

------------------------------------------------------------------------

(program
  (package
    (packageIde
      (Identifier))
    (importDecl
      (importItem
        (packageIde
          (Identifier))))
    (exportDecl
      (exportItem
        (identifier)))
    (exportDecl
      (exportItem
        (identifier))
      (exportItem
        (Identifier)))))

========================================================================
typedef synonyms
========================================================================

typedef bit [7:0]   Byte;
typedef bit [31:0]  Word;
typedef bit [63:0]  LongWord;
typedef Tuple3#(a, a, a) Triple#(type a);
typedef Int#(n) MyInt#(type n);

------------------------------------------------------------------------

(program
  (packageStmt
    (typeDef
      (typedefSynonym
        (type
          (typePrimary
            (typeNat
              (decDigits))
            (typeNat
              (decDigits))))
        (typeDefType
          (typeIde
            (Identifier))))))
  (packageStmt
    (typeDef
      (typedefSynonym
        (type
          (typePrimary
            (typeNat
              (decDigits))
            (typeNat
              (decDigits))))
        (typeDefType
          (typeIde
            (Identifier))))))
  (packageStmt
    (typeDef
      (typedefSynonym
        (type
          (typePrimary
            (typeNat
              (decDigits))
            (typeNat
              (decDigits))))
        (typeDefType
          (typeIde
            (Identifier))))))
  (packageStmt
    (typeDef
      (typedefSynonym
        (type
          (typePrimary
            (typeIde
              (Identifier))
            (type
              (typePrimary
                (typeIde
                  (identifier))))
            (type
              (typePrimary
                (typeIde
                  (identifier))))
            (type
              (typePrimary
                (typeIde
                  (identifier))))))
        (typeDefType
          (typeIde
            (Identifier))
          (typeFormals
            (typeFormal
              (identifier)))))))
  (packageStmt
    (typeDef
      (typedefSynonym
        (type
          (typePrimary
            (typeIde
              (Identifier))
            (type
              (typePrimary
                (typeIde
                  (identifier))))))
        (typeDefType
          (typeIde
            (Identifier))
          (typeFormals
            (typeFormal
              (identifier))))))))

========================================================================
typedef enum
========================================================================

typedef enum {
   Foo[2],
   Bar[5:7],
   Quux[3:2]
} Glurph;

typedef enum {
 Foo0,
 Foo1,
 Bar5,
 Bar6,
 Bar7,
 Quux3,
 Quux2
} Glurph;

------------------------------------------------------------------------

(program
  (packageStmt
    (typeDef
      (typedefEnum
        (typedefEnumElements
          (typedefEnumElement
            (Identifier)
            (intLiteral
              (unsizedIntLiteral
                (decNum
                  (decDigits)))))
          (typedefEnumElement
            (Identifier)
            (intLiteral
              (unsizedIntLiteral
                (decNum
                  (decDigits))))
            (intLiteral
              (unsizedIntLiteral
                (decNum
                  (decDigits)))))
          (typedefEnumElement
            (Identifier)
            (intLiteral
              (unsizedIntLiteral
                (decNum
                  (decDigits))))
            (intLiteral
              (unsizedIntLiteral
                (decNum
                  (decDigits))))))
        (Identifier))))
  (packageStmt
    (typeDef
      (typedefEnum
        (typedefEnumElements
          (typedefEnumElement
            (Identifier))
          (typedefEnumElement
            (Identifier))
          (typedefEnumElement
            (Identifier))
          (typedefEnumElement
            (Identifier))
          (typedefEnumElement
            (Identifier))
          (typedefEnumElement
            (Identifier))
          (typedefEnumElement
            (Identifier)))
        (Identifier)))))

========================================================================
typedef struct/tagged union
========================================================================

typedef struct { int x; int y; } Coord;
 typedef struct { Addr pc; RegFile rf; Memory mem; }  Proc;

 typedef union tagged {
     bit  [4:0] Register;
     bit [21:0] Literal;
     struct {
         bit  [4:0] regAddr;
         bit  [4:0] regIndex;
     } Indexed;
} InstrOperand;

typedef union tagged {
    struct {
        Op op; Reg rs; CPUReg rt; UInt16 imm;
    } Immediate;
    struct {
        Op op; UInt26 target;
    } Jump;
 } Instruction
   deriving (Bits);

------------------------------------------------------------------------

(program
  (packageStmt
    (typeDef
      (typedefStruct
        (structMember
          (type
            (typePrimary))
          (identifier))
        (structMember
          (type
            (typePrimary))
          (identifier))
        (typeDefType
          (typeIde
            (Identifier))))))
  (packageStmt
    (typeDef
      (typedefStruct
        (structMember
          (type
            (typePrimary
              (typeIde
                (Identifier))))
          (identifier))
        (structMember
          (type
            (typePrimary
              (typeIde
                (Identifier))))
          (identifier))
        (structMember
          (type
            (typePrimary
              (typeIde
                (Identifier))))
          (identifier))
        (typeDefType
          (typeIde
            (Identifier))))))
  (packageStmt
    (typeDef
      (typedefTaggedUnion
        (unionMember
          (type
            (typePrimary
              (typeNat
                (decDigits))
              (typeNat
                (decDigits))))
          (Identifier))
        (unionMember
          (type
            (typePrimary
              (typeNat
                (decDigits))
              (typeNat
                (decDigits))))
          (Identifier))
        (unionMember
          (subStruct
            (structMember
              (type
                (typePrimary
                  (typeNat
                    (decDigits))
                  (typeNat
                    (decDigits))))
              (identifier))
            (structMember
              (type
                (typePrimary
                  (typeNat
                    (decDigits))
                  (typeNat
                    (decDigits))))
              (identifier)))
          (Identifier))
        (typeDefType
          (typeIde
            (Identifier))))))
  (packageStmt
    (typeDef
      (typedefTaggedUnion
        (unionMember
          (subStruct
            (structMember
              (type
                (typePrimary
                  (typeIde
                    (Identifier))))
              (identifier))
            (structMember
              (type
                (typePrimary
                  (typeIde
                    (Identifier))))
              (identifier))
            (structMember
              (type
                (typePrimary
                  (typeIde
                    (Identifier))))
              (identifier))
            (structMember
              (type
                (typePrimary
                  (typeIde
                    (Identifier))))
              (identifier)))
          (Identifier))
        (unionMember
          (subStruct
            (structMember
              (type
                (typePrimary
                  (typeIde
                    (Identifier))))
              (identifier))
            (structMember
              (type
                (typePrimary
                  (typeIde
                    (Identifier))))
              (identifier)))
          (Identifier))
        (typeDefType
          (typeIde
            (Identifier)))
        (derives
          (typeclassIde
            (Identifier)))))))
